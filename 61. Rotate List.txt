


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        
        if(head == null || head.next ==null){
            return head;
        }
        ListNode temp = head;
        ListNode prev = head;
        
        int count =1;
        
        while(temp.next!=null){
            count++;
            temp = temp.next;
        }
        
        k = k%count;
        
        
        int i =0,j = count - k-1;
        
        while(i<j){
            prev = prev.next;
            i++;
        }
        
        temp.next = head;
        head = prev.next;
        prev.next = null;
        return head;
    }
}